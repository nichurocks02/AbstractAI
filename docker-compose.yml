version: "3.8"

services:
# ─── APPLICATION ─────────────────────────────────────────────
  backend:
    build: {context: ., dockerfile: otterflow-backend/Dockerfile.backend}
    env_file: .env.backend
    networks: [app]
    restart: unless-stopped
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000

  frontend:
    build:
      context: .
      dockerfile: otterflow-frontend/Dockerfile.frontend
    env_file: .env.frontend
    environment:
      NEXT_PUBLIC_BACKEND_URL: https://www.otterflow.in/api
      REACT_APP_BACKEND_URL: https://www.otterflow.in/api
    networks: [app]
    depends_on: [backend]
    restart: unless-stopped

# ─── EDGE (NGINX + CERTBOT) ─────────────────────────────────
  nginx:
    image: nginx:1.25
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - certbot-etc:/etc/letsencrypt                 # LE certs
      - certbot-web:/var/www/certbot                 # ACME webroot
      # ↓ only keep while using self-signed fallback
      - ./certs:/etc/nginx/certs:ro
    networks: [app]
    depends_on: [frontend, backend]
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-web:/var/www/certbot
    entrypoint: >
      sh -c "trap exit TERM;
             while :; do
               certbot renew --webroot -w /var/www/certbot --quiet;
               sleep 12h;
             done"
    networks: [app]
    restart: unless-stopped

# ─── DATA ───────────────────────────────────────────────────
  db:
    image: postgres:15
    env_file: .env
    volumes: [pgdata:/var/lib/postgresql/data]
    networks: [app]
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes: [pgadmin-data:/var/lib/pgadmin]
    ports: ["5050:80"]
    networks: [app]
    restart: unless-stopped

networks:
  app:

volumes:
  certbot-etc:
  certbot-web:
  pgdata:
  pgadmin-data:

