events {}

http {
# ── 1.  HTTP 80 → HTTPS (ACME path is whitelisted) ──────────
    server {
        listen 80;
        server_name otterflow.in www.otterflow.in pgadmin.otterflow.in;
        location /.well-known/acme-challenge/ { root /var/www/certbot; }
        location / { return 301 https://$host$request_uri; }
    }

# ── 2.  Main app over HTTPS ─────────────────────────────────
    server {
        listen 443 ssl http2;
        server_name otterflow.in www.otterflow.in;

        # self-signed fallback  ↓  (leave until LE certs exist)
        ssl_certificate     /etc/nginx/certs/otterflow.in.crt;
        ssl_certificate_key /etc/nginx/certs/otterflow.in.key;

        # uncomment these two lines *after* Let’s Encrypt succeeds
        # ssl_certificate     /etc/letsencrypt/live/www.otterflow.in/fullchain.pem;
        # ssl_certificate_key /etc/letsencrypt/live/www.otterflow.in/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_session_cache shared:SSL:10m;

        location / {                      # Next.js
            proxy_pass http://frontend:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }

        location = /api/docs         { proxy_pass http://backend:8000/api/docs; }
        location = /api/openapi.json { proxy_pass http://backend:8000/api/openapi.json; }

        location ^~ /api/ {           # FastAPI
            rewrite ^/api/(.*)$ /$1 break;
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }
    }

# ── 3.  pgAdmin over HTTPS ─────────────────────────────────
    server {
        listen 443 ssl http2;
        server_name pgadmin.otterflow.in;

        ssl_certificate     /etc/nginx/certs/otterflow.in.crt;
        ssl_certificate_key /etc/nginx/certs/otterflow.in.key;
        # swap to LE paths once you have them (same as above)

        location / {
            proxy_pass http://pgadmin:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }
    }
}

